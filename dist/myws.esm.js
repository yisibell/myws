import e from"mitt";var n=function(n){var o=n.heart_interval,r=void 0===o?5e4:o,s=n.api,t=n.open,c=n.ws_bus_emit_names||{onopen:"ws_open",onmessage:"ws_message",onerror:"ws_error",onclose:"ws_close"},a=e(),i=null,l=!0;try{l="string"==typeof t?JSON.parse(t):t}catch(e){l=!0,console.error("the open property should be a truly value.")}if(l&&s){var m=new WebSocket(s);return m.onopen=function(e){console.log("ws connected..."),a.emit(c.onopen,e),n.onopen&&n.onopen(e),m.send("heart"),clearInterval(i),i=setInterval((function(){m.send("heart")}),"string"==typeof r?Number.parseInt(r):r)},m.onmessage=function(e){var o=JSON.parse(e.data);a.emit(c.onmessage,o),n.onmessage&&n.onmessage(o)},m.onerror=function(e){console.log("ws error!"),a.emit(c.onerror,e),clearInterval(i),n.onerror&&n.onerror(e)},m.onclose=function(e){console.log("ws closed!"),function(e,n){e.emit("ws_reconnect",n)}(a,e),a.emit(c.onclose,e),clearInterval(i),n.onclose&&n.onclose(e)},{WS:m,WsBus:a}}return{WsBus:a}},o=0,r=function(e,s){e.ws_bus_emit_names=Object.assign({onopen:"ws_open",onmessage:"ws_message",onerror:"ws_error",onclose:"ws_close"},e.ws_bus_emit_names);var t=n(e);if(t){var c=t.WsBus,a=e.reconnect_limit,i=void 0===a?30:a,l=e.reconnect_limit_msg,m=e.reconnect_msg;return c.on(e.ws_bus_emit_names.onopen,(function(){var e;void 0===(e=0)&&(e=0),o=e})),c.on("ws_reconnect",(function(){if(o>i){var n=l||"The number of ws reconnections has exceeded ".concat(i,"ï¼Œyou can refresh to reconnect the ws server!");console.warn(n)}else setTimeout((function(){++o;var n="ws reconnect the ".concat(o,"th time ...");"function"==typeof m?n=m(o):m&&(n=m),console.log(n),r(e,s)}),e.reconnect_interval||3e3)})),s(t),t}},s={install:function(e,n){void 0===n&&(n={}),r(n,(function(n){e.prototype.$ws=n}))}};export{o as WS_CONNECT_COUNT,n as createWebSocket,r as initMyws,s as wsInstaller};
